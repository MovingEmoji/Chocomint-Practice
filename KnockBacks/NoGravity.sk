options:
	prefix: &b[&enUtils&b]
	kit: NoGravity

on load:
	broadcast "{@prefix} &2Successfully loaded {@kit}'s knockback"

on unload:
	broadcast "{@prefix} &4Unloaded {@kit}'s knockback"

player velocity event:
	if {nutil.player.%player's uuid%::play} is "{@kit}":
		if {nutil.player.%player's uuid%::lastattack} is set:
			if {nutil.player.%player's uuid%::damagecause} is attack:
				cancel event
				set {_now} and {nutil.player.%player's uuid%::attacktime} to plugin uptime tick
				set {_ag} to {nutil.player.%player's uuid%::lastattack}
				delete {nutil.player.%player's uuid%::lastattack} and {nutil.player.%player's uuid%::damagecause}
				set {_ag.uuid} to uuid of {_ag}
				set {_v} to vector between {_ag} and player
				set {_v} to normalized value of {_v}
				set vector length of {_v} to 0.3
				set y of {_v} to 0.4
				if player is on ground:
					set {_ground} to true
				else:
					set {_ground} to false
				set {_down} to 0
				while {_now} is {nutil.player.%player's uuid%::attacktime}:
					if {_ground} is false:
						if player is on ground:
							exit loop
					set x of {_v} to x of {_v} * 0.95
					set z of {_v} to z of {_v} * 0.95
					set y of {_v} to y of {_v} - {_down}
					set player's velocity to {_v}
					if player is on ground:
						set {_ground} to true
					else:
						set {_ground} to false
					set {_down} to {_down} + 0.01
					if {_down} > 0.15:
						set {_down} to 0.15
					wait a tick